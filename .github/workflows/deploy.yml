name: CD - Deploy to EC2

on:
  push:
    branches: [ main, master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    # ✅ 빌드 전에 application.yml 생성
    - name: Create application.yml
      run: |
        mkdir -p src/main/resources
        echo '${{ secrets.APPLICATION_YML }}' > src/main/resources/application.yml
        
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build with Gradle
      run: ./gradlew build

    - name: Stop existing application
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        port: 22
        script: |
          # 기존 애플리케이션 종료
          sudo pkill -f "java -jar" || true
          
          # 백업 디렉토리 생성
          mkdir -p ~/app/backup
          
          # 기존 JAR 파일 백업
          if [ -f ~/app/app.jar ]; then
            mv ~/app/app.jar ~/app/backup/app-$(date +%Y%m%d-%H%M%S).jar
          fi
          
    - name: Copy JAR to EC2
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        port: 22
        source: "build/libs/*.jar"
        target: "~/app/"
        strip_components: 2
        
    - name: Start Application
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        port: 22
        script: |
          cd ~/app
          
          # JAR 파일명 통일
          JAR_FILE=$(ls -t *.jar | head -n1)
          if [ -f "$JAR_FILE" ]; then
            mv "$JAR_FILE" app.jar
          fi
          
          # 애플리케이션 시작
          nohup java -jar app.jar > app.log 2>&1 &
          
          # 상태 확인
          sleep 10
          if pgrep -f "java -jar app.jar" > /dev/null; then
            echo "✅ Application started successfully"
            echo "Process ID: $(pgrep -f 'java -jar app.jar')"
          else
            echo "❌ Failed to start application"
            echo "Last 20 lines of log:"
            tail -20 app.log
            exit 1
          fi
          
    - name: Deployment notification
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "🚀 배포 성공! 애플리케이션이 정상적으로 실행 중입니다."
        else
          echo "💥 배포 실패! 로그를 확인해주세요."
        fi
