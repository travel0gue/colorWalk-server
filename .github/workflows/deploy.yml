name: CD - Deploy to EC2
on:
 push:
   branches: [ main, master ]
jobs:
 deploy:
   runs-on: ubuntu-latest
   
   steps:
   - name: Checkout code
     uses: actions/checkout@v4
     
   - name: Set up JDK 17
     uses: actions/setup-java@v4
     with:
       java-version: '17'
       distribution: 'temurin'
       
   # ✅ 빌드 전에 application.yml 생성
   - name: Create application.yml
     run: |
       mkdir -p src/main/resources
       echo '${{ secrets.APPLICATION_YML }}' > src/main/resources/application.yml
       
   - name: Cache Gradle packages
     uses: actions/cache@v3
     with:
       path: |
         ~/.gradle/caches
         ~/.gradle/wrapper
       key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
       restore-keys: |
         ${{ runner.os }}-gradle-
         
   - name: Grant execute permission for gradlew
     run: chmod +x gradlew
     
   - name: Build with Gradle
     run: ./gradlew build
     
   - name: Stop existing application
     uses: appleboy/ssh-action@v0.1.7
     with:
       host: ${{ secrets.EC2_HOST }}
       username: ${{ secrets.EC2_USER }}
       key: ${{ secrets.EC2_PEM_KEY }}
       port: 22
       script: |
         # 기존 애플리케이션 종료 (정확한 파일명으로)
         sudo pkill -f "color_walk-0.0.1-SNAPSHOT.jar" || true
         
         # 백업 디렉토리 생성
         mkdir -p ~/app/backup
         
         # 기존 JAR 파일 백업 (정확한 파일명으로)
         if [ -f ~/app/color_walk-0.0.1-SNAPSHOT.jar ]; then
           mv ~/app/color_walk-0.0.1-SNAPSHOT.jar ~/app/backup/color_walk-$(date +%Y%m%d-%H%M%S).jar
         fi
         
   - name: Copy JAR to EC2
     uses: appleboy/scp-action@v0.1.4
     with:
       host: ${{ secrets.EC2_HOST }}
       username: ${{ secrets.EC2_USER }}
       key: ${{ secrets.EC2_PEM_KEY }}
       port: 22
       source: "build/libs/color_walk-0.0.1-SNAPSHOT.jar"
       target: "~/app/"
       strip_components: 2
       
   - name: Start Application
     uses: appleboy/ssh-action@v0.1.7
     with:
       host: ${{ secrets.EC2_HOST }}
       username: ${{ secrets.EC2_USER }}
       key: ${{ secrets.EC2_PEM_KEY }}
       port: 22
       script: |
         cd ~/app
         
         # 애플리케이션 시작 (정확한 파일명으로)
         nohup java -jar color_walk-0.0.1-SNAPSHOT.jar > app.log 2>&1 &
         
         # 상태 확인 (정확한 파일명으로)
         sleep 10
         if pgrep -f "color_walk-0.0.1-SNAPSHOT.jar" > /dev/null; then
           echo "✅ Application started successfully"
           echo "Process ID: $(pgrep -f 'color_walk-0.0.1-SNAPSHOT.jar')"
         else
           echo "❌ Failed to start application"
           echo "Last 20 lines of log:"
           tail -20 app.log
           exit 1
         fi
         
   - name: Deployment notification
     if: always()
     run: |
       if [ "${{ job.status }}" == "success" ]; then
         echo "🚀 배포 성공! 애플리케이션이 정상적으로 실행 중입니다."
       else
         echo "💥 배포 실패! 로그를 확인해주세요."
       fi
